{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","console","log","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAAoB,EAEXC,mBAAS,IAFE,mBAExCC,EAFwC,KAE5BC,EAF4B,KAmB/C,OACI,sBAAMC,SAZW,SAAEC,GACnBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAsBO,OACzCN,EAAc,OAOlB,SACI,uBACQO,KAAK,OACLC,MAAQT,EACRU,SApBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACkCC,UAAUH,GAD5C,+DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARjB,kBAWbM,GAXa,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACpC,OACG,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,4BAAKA,QCFCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EAChBd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH+B,mBACnCC,EADmC,KAC5BC,EAD4B,KAiB1C,OAXAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAAAC,GACnBH,EAAS,CACPf,KAAMkB,EACNL,SAAQ,SAGb,CAACpB,IAIGqB,EDdyBK,CAAe1B,GAAnCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAGpB,OAFAO,QAAQC,IAAIR,GAGV,qCACA,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACX,qBAAKA,UAAU,YAAf,SAGIH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEKA,GADAA,EAAIC,aEqBRkB,EAhCM,WAAK,MAIc3C,mBAAS,CAAC,gBAJxB,mBAIf4C,EAJe,KAIH7C,EAJG,KAUtB,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCrBlC+B,IAASC,OACL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.5b410e19.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( { setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = ( e ) =>{\r\n        e.preventDefault();\r\n        //console.log('Submit hecho')\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [ inputValue , ...cats ])\r\n            setInputValue(' ')\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                    type=\"text\"\r\n                    value={ inputValue }\r\n                    onChange={ handleInputChange }\r\n                />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async( category ) =>{\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)  }&limit=10&api_key=hJSkmTimzKOplAy0o68Ou96TK7p6S2m7`\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n  return  gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({  title, url }) => {\r\n  return(\r\n     <div className='card animate__animated animate__fadeIn'>\r\n       <img src={ url } alt={title}></img>\r\n       <p>{ title }</p>\r\n    </div>);\r\n};\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n \r\nexport const GifGrid = ({category}) => {\r\n  \r\n  const{ data:images ,loading } = useFetchGifs(  category );\r\n  console.log(loading)\r\n  \r\n  return (\r\n    <>\r\n    <h3 className='animate__animated animate__fadeIn'>{ category }</h3>\r\n    { loading && <p className='animate__animated animate__flash'>Loading</p> }\r\n    { <div className='card-grid' >\r\n     \r\n        {\r\n          images.map( img => (\r\n              <GifGridItem \r\n              key={img.id}\r\n              { ...img }\r\n              />\r\n            ))\r\n        }\r\n    </div> }\r\n    </>\r\n    \r\n  );\r\n};\r\n","import  { useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then(imgs => {\r\n        setstate({\r\n          data: imgs,\r\n          loading:false\r\n        })\r\n    })\r\n  }, [category]);\r\n  \r\n\r\n\r\n  return state;\r\n};\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n \r\n//import { Fragment } from \"react\";\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    //const categories = ['One punch', 'Samurai X', 'Dragon Ball']\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball'])\r\n   /*  const handleAdd = () => {\r\n        setCategories(['Kakaroto',...categories])\r\n        \r\n    } */\r\n\r\n    return(\r\n        <>\r\n            <h1>GifExpertApp </h1>\r\n            <AddCategory setCategories={ setCategories }></AddCategory>\r\n            <hr/>\r\n            <ol>\r\n                { \r\n                    categories.map(category =>( \r\n                        <GifGrid\r\n                            key={ category } \r\n                            category={ category } \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n        \r\n\r\n    );\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp/>,\n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}